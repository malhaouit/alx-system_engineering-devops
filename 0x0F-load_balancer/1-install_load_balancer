#!/usr/bin/env bash
# Script to install and configure HAProxy as a load balancer

echo "Checking if HAProxy is installed..."
if ! command -v haproxy &> /dev/null; then
	echo "HAProxy not found. Installing..."
	apt-get update -y
	apt-get install -y haproxy
else
	echo "HAProxy is already installed. Skipping installation."
fi

# Enables HAProxy to start at boot
echo "Enabling HAProxy to start at boot..."
systemctl enable haproxy

# Backup the current HAProxy configuration
echo "Backing up current HAProxy configuration..."
cp /etc/haproxy/haproxy.cfg{,.backup_"$(date +%F-%H-%M-%S)"}

echo "Configuring HAProxy..."
# New HAProxy configuration
cat << EOF > /etc/haproxy/haproxy.cfg
global
	log /dev/log local0 notice
	log /dev/log local1 info
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	user haproxy
	group haproxy
	daemon
	maxconn 256

defaults
	log     global
	mode    http
	option  httplog
	option  dontlognull
	timeout connect 5000ms
	timeout client  50000ms
	timeout server  50000ms
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend am-trustdev.tech-frontend
	bind *:80
	default_backend am-trustdev.tech-backend

backend am-trustdev.tech-backend
	balance roundrobin
	server 512139-web-01 54.174.153.120:80 check
	server 512139-web-02 18.204.14.78:80 check
EOF

# Checks if HAProxy is active before attempting to restart
if systemctl is-active --quiet haproxy; then
	echo "Restarting HAProxy to apply new configuration..."
	systemctl restart haproxy
else
	echo "Starting HAProxy..."
	systemctl start haproxy
fi

echo "HAProxy configuration completed."
